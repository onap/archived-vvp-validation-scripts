# -*- coding: utf8 -*-
# ============LICENSE_START=======================================================
# org.onap.vvp/validation-scripts
# ===================================================================
# Copyright Â© 2019 AT&T Intellectual Property. All rights reserved.
# ===================================================================
#
# Unless otherwise specified, all software contained herein is licensed
# under the Apache License, Version 2.0 (the "License");
# you may not use this software except in compliance with the License.
# You may obtain a copy of the License at
#
#             http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#
# Unless otherwise specified, all documentation contained herein is licensed
# under the Creative Commons License, Attribution 4.0 Intl. (the "License");
# you may not use this documentation except in compliance with the License.
# You may obtain a copy of the License at
#
#             https://creativecommons.org/licenses/by/4.0/
#
# Unless required by applicable law or agreed to in writing, documentation
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ============LICENSE_END============================================
#
#

heat_template_version: 2015-04-30

description: fdsafsfsa

parameters:

  STARKDB_image_name:
    type: number
    description: sdfnklafd
  STARKDB_name:
    type: number
    description: sdfnklafd
  my_nested_parameter:
    type: number
    description: sdfnklafd
    #constraints:
    #  - range: { min: 100, max: 400 }
  subnet_uuid:
    type: string

resources:

  STARKDB_server_2:
    type: OS::Nova::Server
    properties:
      image: { get_param: STARKDB_image_name }
      flavor: { get_param: STARKDB_flavor_dvdfg }
      name: { get_param: STARKDB_name }
      availability_zone: { get_param: availability_zone_0 }

  my_nested_resource2:
    type: test
    properties:
      name: { get_param: asfasf }

  STARKDB_2_crazy_port_2:
    type: OS::Neutron::Port
    properties:
      network: { get_param: crazy_net_id }
      fixed_ips: 
        - subnet: { get_param: crazy_subnet_id }
        - ip_address: { get_param: STARKDB_crazy_ip_0 }
      allowed_address_pairs: [ { "ip_address": {get_param:
        STARKDB_crazy_floating_ip}}]

  int_private_net_id:
    type: OS::Neutron::Net
    properties:
      name: { get_param: int_priv_net_id }

  STARKDB_0_int_priv_port_0:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: int_private_net_id }
      fixed_ips:
        - subnet: { get_resource: int_priv_subnet }
        - ip_address: { get_param: STARKDB_int_private_v6_ips }

  myrouteprefix:
    type: OS::ContrailV2::InterfaceRouteTable
    properties:
      name:
        str_replace:
          template: VNF_NAME_interface_route_table
          params:
            VNF_NAME: { get_param: vnf_name }
      interface_route_table_routes:
        interface_route_table_routes_route: { get_param: fw_oam_route_prefixes }
        test: safd

  stark_rg:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: stark_rg_count }
      resource_def:
        type: STARKDB-nested.yaml
        properties:
          my_nested_parameter: 4

  fw_0_oam_protected_vmi_0_IP_0:
    type: OS::ContrailV2::InstanceIp
    properties:
      instance_ip_address: { get_param: [fw_oam_protected_ips, get_param: index ] }

  fw_0_int_other_vmi_0_IP_0:
    type: OS::ContrailV2::InstanceIp
    properties:
      instance_ip_address: { get_param: fw_other_ip_0 }
      subnet_uuid: { get_param: subnet_uuid }

outputs:
  test_value: 
    value: { get_param: my_nested_parameter }
